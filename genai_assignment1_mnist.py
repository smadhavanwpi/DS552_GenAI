# -*- coding: utf-8 -*-
"""GenAI_Assignment1_MNIST.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UPpMy_Hnz1AmkLoT2fejdTav5PtRlp2j
"""

import numpy as np
import pandas as pd
from sklearn.datasets import fetch_openml
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report
from sklearn.preprocessing import MinMaxScaler

# Load the MNIST dataset
print("Loading MNIST dataset...")
mnist = fetch_openml('mnist_784', version=1, as_frame=False)
X, y = mnist.data, mnist.target.astype(int)

# Normalize pixel values to [0, 1]
X = X / 255.0

# Split the dataset into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Naive Bayes Model
print("Training Naive Bayes model...")
nb_model = GaussianNB()
nb_model.fit(X_train, y_train)

# Logistic Regression Model
print("Training Logistic Regression model...")
lr_model = LogisticRegression(max_iter=1000, random_state=42)
lr_model.fit(X_train, y_train)

# Evaluate Naive Bayes
nb_train_pred = nb_model.predict(X_train)
nb_test_pred = nb_model.predict(X_test)

nb_train_accuracy = accuracy_score(y_train, nb_train_pred)
nb_test_accuracy = accuracy_score(y_test, nb_test_pred)

print("\nNaive Bayes - Training Accuracy:", nb_train_accuracy)
print("Naive Bayes - Test Accuracy:", nb_test_accuracy)
print("Naive Bayes - Classification Report on Test Data:")
print(classification_report(y_test, nb_test_pred))

# Evaluate Logistic Regression
lr_train_pred = lr_model.predict(X_train)
lr_test_pred = lr_model.predict(X_test)

lr_train_accuracy = accuracy_score(y_train, lr_train_pred)
lr_test_accuracy = accuracy_score(y_test, lr_test_pred)

print("\nLogistic Regression - Training Accuracy:", lr_train_accuracy)
print("Logistic Regression - Test Accuracy:", lr_test_accuracy)
print("Logistic Regression - Classification Report on Test Data:")
print(classification_report(y_test, lr_test_pred))

# Compare performance
print("\nModel Comparison:")
print("Naive Bayes - Test Accuracy:", nb_test_accuracy)
print("Logistic Regression - Test Accuracy:", lr_test_accuracy)

if nb_test_accuracy > lr_test_accuracy:
    print("Naive Bayes performs better on MNIST.")
elif lr_test_accuracy > nb_test_accuracy:
    print("Logistic Regression performs better on MNIST.")
else:
    print("Both models perform similarly on MNIST.")